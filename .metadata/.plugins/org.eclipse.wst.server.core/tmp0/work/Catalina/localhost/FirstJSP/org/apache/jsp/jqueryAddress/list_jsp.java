/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-07-16 01:32:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jqueryAddress;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jqueryAddress.Address;
import com.jqueryAddress.JAddressDAO;
import java.util.ArrayList;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jqueryAddress.JAddressDAO");
    _jspx_imports_classes.add("com.jqueryAddress.Address");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>list2번째이벤트</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src = \"https://code.jquery.com/jquery-3.5.1.min.js\"></script> <!-- cdm방식 -->\r\n");
      out.write("</head>\r\n");

String word="";
String field="";

if(request.getParameter("word")!=null){
	field=request.getParameter("field");
	word=request.getParameter("word");
}
JAddressDAO dao = JAddressDAO.getInstance();
ArrayList<Address> arr = dao.addrList();
int count=dao.getCount();
 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//searchBtn클릭함녀\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$(\"#searchBtn\").click(function(){\r\n");
      out.write("\t\t//$.getJSON(url,[data],[callback(함수)])\r\n");
      out.write("\t\t$.getJSON(\"searchPro.jsp\",{\"field\":$(\"#field\").val(),\"word\":$(\"#word\").val()},\r\n");
      out.write("\t\tfunction(data){\r\n");
      out.write("\t\t\tvar htmlStr=\"\";\r\n");
      out.write("\t\t\t$.each(data,function(key,val){\r\n");
      out.write("\t\t\t\thtmlStr+=\"<tr>\";\r\n");
      out.write("\t\t\t\thtmlStr+=\"<td>\"+val.num+\"</td>\";\r\n");
      out.write("\t\t\t\thtmlStr+=\"<td>\"+val.name+\"</td>\";\r\n");
      out.write("\t\t\t\thtmlStr+=\"<td>\"+val.tel+\"</td>\";\r\n");
      out.write("\t\t\t\thtmlStr+=\"<td>\"+val.addr+\"</td>\";\r\n");
      out.write("\t\t\t\thtmlStr+=\"<td onclick=delFunc(\"+val.num+\")>삭제</td>\";\r\n");
      out.write("\t\t\t\thtmlStr+=\"</tr>\";\r\n");
      out.write("\t\t\t})//each\r\n");
      out.write("\t\t\t$(\"table tbody\").html(htmlStr); //table tbody내용->htmlStr으로 html형식으로바꾼다,,\r\n");
      out.write("\t\t}\r\n");
      out.write("\t);\r\n");
      out.write("})\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function delFunc(no){\r\n");
      out.write("\tif(confirm(\"정말 삭제할까요?\")){\r\n");
      out.write("\t\tlocation.href=\"deletePro.jsp?num=\"+no;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("div.divCss{\r\n");
      out.write("text-align:right;\r\n");
      out.write("background-color:gray;\r\n");
      out.write("padding-right:20px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("a:hover{text-decoration:none;}\r\n");
      out.write("a:link{text-decoration:none;}\r\n");
      out.write("a:visited{text-decoration:none;}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"divCss\">\r\n");
      out.write("주소록 갯수 : ");
      out.print(count );
      out.write("<br>\r\n");
      out.write("<a href = \"insert.jsp\">추가하기</a>\r\n");
      out.write("<a href = \"list.jsp\">전체보기</a>\r\n");
      out.write("</div>\r\n");
      out.write("<table class=\"table\">\r\n");
      out.write("\t<thead class=\"thead-dark\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<th scope=\"col\">번호</th>\r\n");
      out.write("\t\t<th scope=\"col\">이름</th>\r\n");
      out.write("\t\t<th scope=\"col\">전화번호</th>\r\n");
      out.write("\t\t<th scope=\"col\">주소</th>\r\n");
      out.write("\t\t<th scope=\"col\">삭제</th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</thead>\r\n");
      out.write("\t\r\n");
      out.write("\t<tbody>\r\n");

	for(int i=0;i<arr.size();i++){

      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>");
      out.print(arr.get(i).getNum() );
      out.write("</td>\r\n");
      out.write("\t<td><a href=\"detail.jsp?num=");
      out.print(arr.get(i).getNum() );
      out.write('"');
      out.write('>');
      out.print(arr.get(i).getName() );
      out.write("</a></td>\r\n");
      out.write("\t<td>");
      out.print(arr.get(i).getTel() );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(arr.get(i).getAddr() );
      out.write("</td>\r\n");
      out.write("\t<td onclick=\"delFunc(");
      out.print(arr.get(i).getNum() );
      out.write(")\">삭제</td></tr>\r\n");
	
	}

      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("</table>\r\n");
      out.write("<form action=\"list.jsp\" name=\"searchFrm\" id=\"searchFrm\">\r\n");
      out.write("<select name=field id=\"field\">\r\n");
      out.write("<option value=\"name\">이름</option>\r\n");
      out.write("<option value=\"tel\">전화번호</option>\r\n");
      out.write("</select>\r\n");
      out.write("<input type=\"text\" name=\"word\" id = \"word\">\r\n");
      out.write("<input type=\"button\" class=\"btn btn-primary\" value=\"검색\" id=\"searchBtn\">\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
