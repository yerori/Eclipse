/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-07-16 01:27:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jqueryAddress;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jqueryAddress.Address;
import com.jqueryAddress.JAddressDAO;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.jqueryAddress.JAddressDAO");
    _jspx_imports_classes.add("com.jqueryAddress.Address");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src = \"https://code.jquery.com/jquery-3.5.1.min.js\"></script> \r\n");

int num=Integer.parseInt(request.getParameter("num"));
JAddressDAO dao = JAddressDAO.getInstance();
Address address =dao.addrDetail(num);

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function zipfinder(){\r\n");
      out.write("\twindow.open(\"zipCheck.jsp\",\"\",\"width=700 height=800\");\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//jquery이용\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$(\"#deleteBtn\").click(function(){\r\n");
      out.write("\t\tif(confirm(\"정말 삭제할까요?\")){\r\n");
      out.write("\t\t\tlocation.href=\"deletePro.jsp?num=");
      out.print(num);
      out.write("\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//매개변수 없는 함수\r\n");
      out.write("function del(){\r\n");
      out.write("\tif(confirm(\"정말 삭제할까요?\")){\r\n");
      out.write("\t\tlocation.href=\"deletePro.jsp?num=");
      out.print(num);
      out.write("\";\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//매개변수 있는 함수\r\n");
      out.write("function dels(no){\r\n");
      out.write("\tif(confirm(\"정말 삭제할까요?\")){\r\n");
      out.write("\t\tlocation.href=\"deletePro.jsp?num=\"+no;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"updatePro.jsp\" method=\"post\" name=\"frm\">\r\n");
      out.write("<input type=\"hidden\" name=\"num\" value=");
      out.print(num );
      out.write(">\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\">주소록 수정하기</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>이름</td>\r\n");
      out.write("<td><input type=\"text\" name=\"name\" value=");
      out.print(address.getName() );
      out.write("></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>우편번호</td>\r\n");
      out.write("<td><input type=\"text\" value=");
      out.print(address.getZipcode() );
      out.write(">\r\n");
      out.write("<input type=\"button\" value=\"검색\" onclick=\"zipfinder()\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>전화번호</td>\r\n");
      out.write("\t<td><input type=\"text\" name=\"tel\" value=");
      out.print(address.getTel());
      out.write("></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td colspan=\"2\"><input type=\"submit\" value=\"수정\">\r\n");
      out.write("\t<input type=\"button\" value=\"삭제\" onclick=\"del()\">\r\n");
      out.write("\t<input type=\"button\" value=\"매개변수 삭제\" onclick=\"dels(");
      out.print(num);
      out.write(")\">\r\n");
      out.write("\t<input type=\"button\" value=\"jQuery 삭제\" onclick=\"del()\" id=\"deleteBtn\">\r\n");
      out.write("\t<input type=\"reset\" value=\"취소\">\r\n");
      out.write("</td></tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
