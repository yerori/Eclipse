/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-07-23 06:58:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.member.MemberVO;
import java.util.ArrayList;
import com.member.MemberDAOImpl;

public final class memberList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.member.MemberDAOImpl");
    _jspx_imports_classes.add("com.member.MemberVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src = \"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script src=\"member.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");

MemberDAOImpl dao = MemberDAOImpl.getInstance();
ArrayList<MemberVO> arr = dao.memberList(); //MemberVO형 값만 들어가는 배열 생성
String suserid = (String)session.getAttribute("userid");
int count = dao.memberCount();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<!-- div: 블럭,, span: 단순히 영역 -->\r\n");
      out.write("\r\n");
      out.write("<div align=\"right\" style=\"margin-right:20px\">\r\n");
      out.write("\t전체 회원 수 :<span id=\"cntSpan\">");
      out.print(count );
      out.write("</span>    <br>\r\n");
      out.write("\t<a href=\"memberView.jsp\">");
      out.print(suserid );
      out.write("</a> 관리자님 반갑습니다. \r\n");
      out.write("\t\r\n");
      out.write("\t<a href=\"logout.jsp\">  로그아웃     </a> <br>\r\n");
      out.write("\t<a href=\"../board/list.jsp\">게시판 글 보기</a>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<table class=\"table table-striped\">\r\n");
      out.write("<thead class=\"thead-dark\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th scope=\"col\">이름</th>\r\n");
      out.write("\t<th scope=\"col\">아이디</th>\r\n");
      out.write("\t<th scope=\"col\">이메일</th>\r\n");
      out.write("\t<th scope=\"col\">전화번호</th>\r\n");
      out.write("\t<th scope=\"col\">등급</th>\r\n");
      out.write("\t<th scope=\"col\">삭제</th>\r\n");
      out.write("</tr>\r\n");
      out.write("</thead>\r\n");
      out.write("\r\n");
      out.write("<tbody>\r\n");
      out.write("\t");

	for(MemberVO vo : arr){
		String mode = vo.getAdmin()==0?"일반회원":"관리자";
	
      out.write("\t\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t<td>");
      out.print(vo.getName() );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(vo.getUserid() );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(vo.getEmail() );
      out.write("</td> <!-- for문 : arr.get(vo).getUse 웅앵  -->\r\n");
      out.write("\t<td>");
      out.print(vo.getPhone() );
      out.write("</td> <!-- foreach문 : vo.get웅앵 -->\r\n");
      out.write("\t<td>");
      out.print(mode );
      out.write("</td>\t\r\n");
      out.write("\t<td> <a href=\"javascript:del('");
      out.print(vo.getUserid());
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(mode );
      out.write("')\">삭제</a></td>\r\n");
      out.write("\t</tr>\r\n");
 
	} 

      out.write("\r\n");
      out.write("\r\n");
      out.write("</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
