/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-07-09 01:52:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.exam;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class secondTest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("table {\r\n");
      out.write(" width : 600px;\r\n");
      out.write(" height : 400px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("table,th, td{\r\n");
      out.write("\t border: 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".thColor{ \r\n");
      out.write("\t background-color:pink;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ol.olType{\r\n");
      out.write("list-style-type: lower-latin;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!--  <script>\r\n");
      out.write("function check(){\r\n");
      out.write("\talert(\"테스트\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>-->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form action=\"secondOutput.jsp\" method=\"get\">\r\n");
      out.write("<table>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<th>성명</th>\r\n");
      out.write("<td><input type=\"text\" name=\"name\"></td>\r\n");
      out.write("<th>성별</th>\r\n");
      out.write("<td><input type=\"radio\" name=gender value=\"남자\" checked>남자\r\n");
      out.write("\r\n");
      out.write("<input type=\"radio\" name=gender value=\"여자\" >여자\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<th>생년월일</th>\r\n");
      out.write("<td colspan=3>\r\n");
      out.write("<input type=\"text\" name=\"year\" size=15>년\r\n");
      out.write("<input type=\"text\" name=\"month\" size=5>월\r\n");
      out.write("<input type=\"text\" name=\"day\" size=5>일\r\n");
      out.write("<input type=\"radio\" name=birth value=\"양력\" >양력\r\n");
      out.write("\r\n");
      out.write("<input type=\"radio\" name=birth value=\"음력\" >음력\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<!-- 3번째 -->\r\n");
      out.write("<tr>\r\n");
      out.write("<th>주소</th>\r\n");
      out.write("<td colspan=\"3\">\r\n");
      out.write("<input type=\"text\" name=addr  size=50></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<!-- 4번째 -->\r\n");
      out.write("<tr>\r\n");
      out.write("<th>전화번호</th>\r\n");
      out.write("<td colspan=\"3\">\r\n");
      out.write("<input type=\"text\" name=\"tel1\" size=10>-\r\n");
      out.write("<input type=\"text\" name=\"tel2\" size=10>-\r\n");
      out.write("<input type=\"text\" name=\"tel3\" size=10></td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 5번째 -->\r\n");
      out.write("<tr>\r\n");
      out.write("<th colspan=\"4\" class=\"thColor\">사용가능한 프로그램 선택하기</th>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 6번째 체크박스-->\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("<td colspan=\"4\">\r\n");
      out.write("\r\n");
      out.write("<ol class=\"olType\">\r\n");
      out.write("\t<li><input type=\"checkbox\" name=prog value=\"한글\">한글</li><br>\r\n");
      out.write("\t<li><input type=\"checkbox\" name=prog value=\"포토샵\">포토샵</li><br>\r\n");
      out.write("\t<li><input type=\"checkbox\" name=prog value=\"매크로 미디어 디렉터\">매크로 미디어 디렉터</li><br>\r\n");
      out.write("\t<li><input type=\"checkbox\" name=prog value=\"드림위버\">드림위버</li><br>\r\n");
      out.write("\t<li><input type=\"checkbox\" name=prog value=\"3D MAX\">3D MAX</li></td>\r\n");
      out.write("\r\n");
      out.write("</ol>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<th colspan=\"4\" class=\"thColor\">가고싶은 여행지를 모두 선택하세요.</th>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"4\">\r\n");
      out.write("<select name=\"area\" size = 3 multiple>\r\n");
      out.write("<option value=\"설악산\" selected>설악산</option>\r\n");
      out.write("<option value=\"경포대\">경포대</option>\r\n");
      out.write("<option value=\"토발\">토발</option>\r\n");
      out.write("<option value=\"해운대\">해운대</option>\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<th colspan=\"4\" class=\"thColor\">미래의 꿈은 어떠한가요</th>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"4\" align=\"center\">\r\n");
      out.write("<textarea cols=50 rows=5 name=\"memo\"></textarea>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"4\" align=\"center\">\r\n");
      out.write("<input type=\"submit\" value=\"전송\" >\r\n");
      out.write("<input type=\"reset\" value=\"다시쓰기\" >\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
