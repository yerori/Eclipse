package com.guest.action;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.guest.model.GuestDAO;
import com.guest.model.GuestDTO;
import com.guest.model.PageUtil;


@WebServlet("/guestbook/list.gb")
public class GuestListAction extends HttpServlet {
	private static final long serialVersionUID = 1L;
 
    public GuestListAction() {
        super();
        // TODO Auto-generated constructor stub
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		GuestDAO dao = GuestDAO.getInstance();
		String pageNum=request.getParameter("pageNum")==null?"1":request.getParameter("pageNum");
		int currentPage=Integer.parseInt(pageNum);
		int pageSize = 5; //한 페이지에 5번까지
		int startRow = (currentPage-1)*pageSize;
		int endRow=startRow*pageSize;
	
		try {
			
			ArrayList<GuestDTO> arr = dao.guestList();
			int count=dao.getCount();
			//총페이지수
			int totPage=(count/pageSize)+(count%pageSize==0?0:1);
			int pageBlock = 3; //1,2,3 숫자 페이지만
			int startPage = ((currentPage-1)/pageBlock)*pageBlock+1;
			int endPage = startPage+pageBlock-1;
			
			if(endPage>totPage) endPage=totPage;
			
			PageUtil pu = new PageUtil();
			pu.setCurrentPage(currentPage);
			pu.setEndPage(endPage);
			pu.setPageBlock(pageBlock);
			pu.setStartPage(startPage);
			pu.setTotPage(totPage);
			
			request.setAttribute("pu", pu);
			
			request.setAttribute("guestbook", arr);
			request.setAttribute("count", count);
			RequestDispatcher rd = request.getRequestDispatcher("listResult.jsp");
			rd.forward(request, response);
		} catch (Exception e) {		
			e.printStackTrace();
		}		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		doGet(request, response);
	}

}
